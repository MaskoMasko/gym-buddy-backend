datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

generator client {
    provider = "prisma-client-js"
}

model User {
    id            Int     @id @default(autoincrement())
    email         String  @unique
    name          String?
    emailVerified Boolean @default(false)
    password      String?
    accessToken   String?
    refreshToken  String?
    // I have no idea how this works...
    friends       User[]  @relation("Friends")
    userAsFriend  User[]  @relation("Friends")

    chatRooms  ChatRoom[] @relation("ChatRoomParticipants")
    messages   Message[]  @relation("Sender")
    ChatRoom   ChatRoom?  @relation(fields: [chatRoomId], references: [id])
    chatRoomId Int?
    Message    Message[]
    userId     Int?
    workouts   Workout[]
    posts      Post[]
    likes      Like[]
    comments   Comment[]
    Review     Review[]
}

model Post {
    id        Int       @id @default(autoincrement())
    title     String
    content   String
    createdAt DateTime  @default(now())
    updatedAt DateTime  @updatedAt
    author    User      @relation(fields: [authorId], references: [id])
    authorId  Int
    media     Media[]
    likes     Like[]
    comments  Comment[]
}

model Media {
    id          Int     @id @default(autoincrement())
    description String?
    url         String?
    postId      Int
    post        Post    @relation(fields: [postId], references: [id])
}

model Like {
    id        Int      @id @default(autoincrement())
    post      Post     @relation(fields: [postId], references: [id])
    postId    Int
    user      User     @relation(fields: [userId], references: [id])
    userId    Int
    createdAt DateTime @default(now())
}

model Comment {
    id        Int      @id @default(autoincrement())
    content   String
    post      Post     @relation(fields: [postId], references: [id])
    postId    Int
    author    User     @relation(fields: [authorId], references: [id])
    authorId  Int
    createdAt DateTime @default(now())
}

// ChatRoom model
model ChatRoom {
    id           Int       @id @default(autoincrement())
    name         String
    participants User[]    @relation("ChatRoomParticipants")
    messages     Message[]
    User         User[]
}

// Message model
model Message {
    id        Int      @id @default(autoincrement())
    text      String
    createdAt DateTime @default(now())
    sender    User     @relation("Sender", fields: [senderId], references: [id])
    chatRoom  ChatRoom @relation(fields: [chatRoomId], references: [id])

    senderId   Int
    chatRoomId Int
    User       User? @relation(fields: [userId], references: [id])
    userId     Int?
}

model Category {
    id       Int        @id
    name     String
    image    String
    Exercise Exercise[]
}

model Equipment {
    id       Int        @id
    name     String
    Exercise Exercise[]
}

model Image {
    id                            Int        @id
    image                         String
    uuid                          String?
    exercise_base                 Int?
    exercise_base_uuid            Int?
    is_main                       Boolean?
    style                         String?
    license                       Int?
    license_title                 String?
    license_author                String?
    license_author_url            String?
    license_object_url            String?
    license_derivative_source_url String?
    author_history                String[]
    Exercise                      Exercise[]
}

model Video {
    id                            Int        @id
    video                         String
    uuid                          String?
    exercise_base                 Int?
    exercise_base_uuid            Int?
    is_main                       Boolean?
    size                          Int?
    duration                      String?
    width                         Int?
    height                        Int?
    codec                         String?
    codec_long                    String?
    license                       Int?
    license_title                 String?
    license_author                String?
    license_author_url            String?
    license_object_url            String?
    license_derivative_source_url String?
    author_history                String[]
    Exercise                      Exercise[]
}

model Exercise {
    id               Int         @id
    name             String
    duration         Int?
    description      String?
    category         Category?   @relation(fields: [categoryId], references: [id])
    categoryId       Int?
    equipment        Equipment[]
    images           Image[]
    videos           Video[]
    uuid             String?     @unique
    exercise_base_id Int?
    creation_date    String?
    // aliases          String[]
    // language          String?
    // license           String?
    // license_author    String?
    // variations        Int[]
    // comments          String?
    // author_history    String[]
    // muscles           String?
    // muscles_secondary String?
    Workout          Workout?    @relation(fields: [statisticsId], references: [id])
    statisticsId     Int?
}

model Workout {
    id           Int        @id @default(autoincrement())
    date         DateTime
    exercises    Exercise[]
    duration     Int?
    est_duration Int
    completed    Boolean    @default(false)
    User         User?      @relation(fields: [userId], references: [id])
    userId       Int?
}

model Gym {
    id           Int           @id @default(autoincrement())
    name         String
    rating       Float
    latitude     Decimal
    longitude    Decimal
    website      String?
    address      String?
    reviews      Review[]
    workingHours WorkingHour[]
    images       GymImage[]
}

model Review {
    id     Int    @id @default(autoincrement())
    text   String
    userId Int
    user   User   @relation(fields: [userId], references: [id])
    gym    Gym?   @relation(fields: [gymId], references: [id])
    gymId  Int?
}

model WorkingHour {
    id    Int    @id @default(autoincrement())
    day   String
    open  String
    close String
    gymId Int
    gym   Gym    @relation(fields: [gymId], references: [id])
}

model GymImage {
    id    Int    @id @default(autoincrement())
    uri   String
    gymId Int
    gym   Gym    @relation(fields: [gymId], references: [id])
}
